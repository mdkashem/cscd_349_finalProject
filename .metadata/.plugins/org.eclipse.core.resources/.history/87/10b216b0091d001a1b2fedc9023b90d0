package dungeon;



import java.util.Arrays;
import java.util.Scanner;

/**

 * Title: Dungeon.java
 *
 * Description: Driver file for Heroes and Monsters project
 *
 * Copyright:    Copyright (c) 2001
 * Company: Code Dogs Inc.
 * I.M. Knurdy
 *
 * History:
 *  11/4/2001: Wrote program
 *    --created DungeonCharacter class
 *    --created Hero class
 *    --created Monster class
 *    --had Hero battle Monster
 *    --fixed attack quirks (dead monster can no longer attack)
 *    --made Hero and Monster abstract
 *    --created Warrior
 *    --created Ogre
 *    --made Warrior and Ogre battle
 *    --added battleChoices to Hero
 *    --added special skill to Warrior
 *    --made Warrior and Ogre battle
 *    --created Sorceress
 *    --created Thief
 *    --created Skeleton
 *    --created Gremlin
 *    --added game play features to Dungeon.java (this file)
 *  11/27/2001: Finished documenting program
 * version 1.0
 */



/*
  This class is the driver file for the Heroes and Monsters project.  It will
  do the following:

  1.  Allow the user to choose a hero
  2.  Randomly select a monster
  3.  Allow the hero to battle the monster

  Once a battle concludes, the user has the option of repeating the above

*/
public class DungeonAdventure
{
    public static void main(String[] args)
	{
     HeroFactory factory = new HeroFactory();
     MonsterFactory monster = new MonsterFactory();
		Hero theHero;
		Monster theMonster;
		
		Dungeon dungeon = new Dungeon(5,5);
		
		dungeon.printDungeon();
		dungeon.spawn(theHero, dungeon);
		System.out.println("You wake up in a dark room...");
		
		
		
		do
		{
			theHero = factory.createHero();
			movePlayer(theHero, dungeon);
		    //theMonster = monster.generateMonster();
			//battle(theHero, theMonster);
			movePlayer(theHero,dungeon);

		} while (playAgain());

    }//end main method
    
    
   public static void movePlayer(Hero player, Dungeon dungeon) {
	   Scanner kin = new Scanner(System.in);
		System.out.println("Which direction do you want to go?: \n"
							+ "N, S, E, W? ");
							
		if(kin.next().equalsIgnoreCase("N")) {
//			if() {
//				System.out.println("You ran into a wall, choose another direction.");
//			} else {
//				
//			}
		}
   }
   

	 	
	public static boolean playAgain()
	{
		char again;
		Scanner kin = new Scanner(System.in);

		System.out.println("Play again (y/n)?");
		again = kin.next().charAt(0);
		
		if(again == 'Y' || again == 'y') {
			return true;
		}
	 
		return false;
	}//end playAgain method


/*-------------------------------------------------------------------
battle is the actual combat portion of the game.  It requires a Hero
and a Monster to be passed in.  Battle occurs in rounds.  The Hero
goes first, then the Monster.  At the conclusion of each round, the
user has the option of quitting.
---------------------------------------------------------------------*/
	public static void battle(Hero theHero, Monster theMonster)
	{   AttackFactory MonsterAttackFactory = new AttackFactory();
		
		Scanner kb = new Scanner(System.in);
		char pause = 'p';
		System.out.println(theHero.getName() + " battles " +
							theMonster.getName());
		System.out.println("---------------------------------------------");

		//do battle
		while (theHero.isAlive() && theMonster.isAlive() && pause != 'q')
		{
		    //hero goes first
			theHero.battleChoices(theMonster);

			//monster's turn (provided it's still alive!)
			if (theMonster.isAlive())
				MonsterAttackFactory.getBaseAttack("Base Attack ").attack(theHero, theMonster);;
			    //theMonster.attack(theHero);

			//let the player bail out if desired
			System.out.print("\n-->q to quit, anything else to continue: ");
			pause = kb.next().charAt(0);

		}//end battle loop

		if (!theMonster.isAlive())
		    System.out.println(theHero.getName() + " was victorious!");
		else if (!theHero.isAlive())
			System.out.println(theHero.getName() + " was defeated :-(");
		else//both are alive so user quit the game
			System.out.println("Quitters never win ;-)");

	}//end battle method


}//end Dungeon class
